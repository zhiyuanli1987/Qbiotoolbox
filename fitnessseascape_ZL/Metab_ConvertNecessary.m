function metabfuns=Metab_ConvertNecessary(species_para)

metabfuns=[];

% load parameters
intercell_dim=species_para.intercell_dim;

Gamma=species_para.Gamma;
Ks=reshape(species_para.Ks,2,1);
p=species_para.p;
Es=reshape(species_para.Es,4,1);% strategy
metabfuns.Edim=length(Es);

vs=Es(1:2);
convertM=[0,Es(3);% from b to a
    -Es(4),0]; % from a to b


% for ODEs
Intakes_givenE=@(cs,xs,Es)(Es(1:2)+p).*cs-p*xs;
Growth_givenE=@(cs,xs,Es)Gamma/sum(Ks./xs);
dxdt_givenE=@(cs,xs,Es)Intakes_givenE(cs,xs,Es)-Growth_givenE(cs,xs,Es).*Ks  + sum(([0,Es(3);-Es(4),0])*xs)*[1;-1];

Intakes=@(cs,xs)Intakes_givenE(cs,xs,Es);
Growth=@(cs,xs)Growth_givenE(cs,xs,Es);
dxdt=@(cs,xs)dxdt_givenE(cs,xs,Es);

metabfuns.Intakes=Intakes;
metabfuns.Growth=Growth;
metabfuns.withincell_dxdt=dxdt;
metabfuns.intercell_dim=intercell_dim;

% for the analytical steady states given environment 
K_1=Ks(1);
K_2=Ks(2);
E_1=Es(1);
E_2=Es(2);
E_3=Es(3);
E_4=Es(4);

 growth_givencab=@(c_a,c_b)(K_2*c_a*p^4 - p^2*(E_1^2*E_3^2*K_2^2*c_a^2 + 2*E_1^2*E_3*E_4*K_1*K_2*c_a^2 + 2*E_1^2*E_3*Gamma*K_2^2*c_a^2 + 2*E_1^2*E_3*K_2^2*c_a^2*p + E_1^2*E_4^2*K_1^2*c_a^2 - 2*E_1^2*E_4*Gamma*K_1*K_2*c_a^2 + 2*E_1^2*E_4*K_1*K_2*c_a^2*p + E_1^2*Gamma^2*K_2^2*c_a^2 + 2*E_1^2*Gamma*K_2^2*c_a^2*p + E_1^2*K_2^2*c_a^2*p^2 + 2*E_1*E_2*E_3^2*K_2^2*c_a*c_b + 4*E_1*E_2*E_3*E_4*K_1*K_2*c_a*c_b - 2*E_1*E_2*E_3*Gamma*K_1*K_2*c_a*c_b + 2*E_1*E_2*E_3*Gamma*K_2^2*c_a*c_b + 2*E_1*E_2*E_3*K_1*K_2*c_a*c_b*p + 2*E_1*E_2*E_3*K_2^2*c_a*c_b*p + 2*E_1*E_2*E_4^2*K_1^2*c_a*c_b + 2*E_1*E_2*E_4*Gamma*K_1^2*c_a*c_b - 2*E_1*E_2*E_4*Gamma*K_1*K_2*c_a*c_b + 2*E_1*E_2*E_4*K_1^2*c_a*c_b*p + 2*E_1*E_2*E_4*K_1*K_2*c_a*c_b*p - 2*E_1*E_2*Gamma^2*K_1*K_2*c_a*c_b - 4*E_1*E_2*Gamma*K_1*K_2*c_a*c_b*p + 2*E_1*E_2*K_1*K_2*c_a*c_b*p^2 + 2*E_1*E_3^2*K_2^2*c_a^2*p + 2*E_1*E_3^2*K_2^2*c_a*c_b*p + 4*E_1*E_3*E_4*K_1*K_2*c_a^2*p + 4*E_1*E_3*E_4*K_1*K_2*c_a*c_b*p - 2*E_1*E_3*Gamma*K_1*K_2*c_a*c_b*p + 4*E_1*E_3*Gamma*K_2^2*c_a^2*p + 2*E_1*E_3*Gamma*K_2^2*c_a*c_b*p + 2*E_1*E_3*K_1*K_2*c_a*c_b*p^2 + 4*E_1*E_3*K_2^2*c_a^2*p^2 + 2*E_1*E_3*K_2^2*c_a*c_b*p^2 + 2*E_1*E_4^2*K_1^2*c_a^2*p + 2*E_1*E_4^2*K_1^2*c_a*c_b*p + 2*E_1*E_4*Gamma*K_1^2*c_a*c_b*p - 4*E_1*E_4*Gamma*K_1*K_2*c_a^2*p - 2*E_1*E_4*Gamma*K_1*K_2*c_a*c_b*p + 2*E_1*E_4*K_1^2*c_a*c_b*p^2 + 4*E_1*E_4*K_1*K_2*c_a^2*p^2 + 2*E_1*E_4*K_1*K_2*c_a*c_b*p^2 - 2*E_1*Gamma^2*K_1*K_2*c_a*c_b*p + 2*E_1*Gamma^2*K_2^2*c_a^2*p - 4*E_1*Gamma*K_1*K_2*c_a*c_b*p^2 + 4*E_1*Gamma*K_2^2*c_a^2*p^2 + 2*E_1*K_1*K_2*c_a*c_b*p^3 + 2*E_1*K_2^2*c_a^2*p^3 + E_2^2*E_3^2*K_2^2*c_b^2 + 2*E_2^2*E_3*E_4*K_1*K_2*c_b^2 - 2*E_2^2*E_3*Gamma*K_1*K_2*c_b^2 + 2*E_2^2*E_3*K_1*K_2*c_b^2*p + E_2^2*E_4^2*K_1^2*c_b^2 + 2*E_2^2*E_4*Gamma*K_1^2*c_b^2 + 2*E_2^2*E_4*K_1^2*c_b^2*p + E_2^2*Gamma^2*K_1^2*c_b^2 + 2*E_2^2*Gamma*K_1^2*c_b^2*p + E_2^2*K_1^2*c_b^2*p^2 + 2*E_2*E_3^2*K_2^2*c_a*c_b*p + 2*E_2*E_3^2*K_2^2*c_b^2*p + 4*E_2*E_3*E_4*K_1*K_2*c_a*c_b*p + 4*E_2*E_3*E_4*K_1*K_2*c_b^2*p - 2*E_2*E_3*Gamma*K_1*K_2*c_a*c_b*p - 4*E_2*E_3*Gamma*K_1*K_2*c_b^2*p + 2*E_2*E_3*Gamma*K_2^2*c_a*c_b*p + 2*E_2*E_3*K_1*K_2*c_a*c_b*p^2 + 4*E_2*E_3*K_1*K_2*c_b^2*p^2 + 2*E_2*E_3*K_2^2*c_a*c_b*p^2 + 2*E_2*E_4^2*K_1^2*c_a*c_b*p + 2*E_2*E_4^2*K_1^2*c_b^2*p + 2*E_2*E_4*Gamma*K_1^2*c_a*c_b*p + 4*E_2*E_4*Gamma*K_1^2*c_b^2*p - 2*E_2*E_4*Gamma*K_1*K_2*c_a*c_b*p + 2*E_2*E_4*K_1^2*c_a*c_b*p^2 + 4*E_2*E_4*K_1^2*c_b^2*p^2 + 2*E_2*E_4*K_1*K_2*c_a*c_b*p^2 + 2*E_2*Gamma^2*K_1^2*c_b^2*p - 2*E_2*Gamma^2*K_1*K_2*c_a*c_b*p + 4*E_2*Gamma*K_1^2*c_b^2*p^2 - 4*E_2*Gamma*K_1*K_2*c_a*c_b*p^2 + 2*E_2*K_1^2*c_b^2*p^3 + 2*E_2*K_1*K_2*c_a*c_b*p^3 + E_3^2*K_2^2*c_a^2*p^2 + 2*E_3^2*K_2^2*c_a*c_b*p^2 + E_3^2*K_2^2*c_b^2*p^2 + 2*E_3*E_4*K_1*K_2*c_a^2*p^2 + 4*E_3*E_4*K_1*K_2*c_a*c_b*p^2 + 2*E_3*E_4*K_1*K_2*c_b^2*p^2 - 2*E_3*Gamma*K_1*K_2*c_a*c_b*p^2 - 2*E_3*Gamma*K_1*K_2*c_b^2*p^2 + 2*E_3*Gamma*K_2^2*c_a^2*p^2 + 2*E_3*Gamma*K_2^2*c_a*c_b*p^2 + 2*E_3*K_1*K_2*c_a*c_b*p^3 + 2*E_3*K_1*K_2*c_b^2*p^3 + 2*E_3*K_2^2*c_a^2*p^3 + 2*E_3*K_2^2*c_a*c_b*p^3 + E_4^2*K_1^2*c_a^2*p^2 + 2*E_4^2*K_1^2*c_a*c_b*p^2 + E_4^2*K_1^2*c_b^2*p^2 + 2*E_4*Gamma*K_1^2*c_a*c_b*p^2 + 2*E_4*Gamma*K_1^2*c_b^2*p^2 - 2*E_4*Gamma*K_1*K_2*c_a^2*p^2 - 2*E_4*Gamma*K_1*K_2*c_a*c_b*p^2 + 2*E_4*K_1^2*c_a*c_b*p^3 + 2*E_4*K_1^2*c_b^2*p^3 + 2*E_4*K_1*K_2*c_a^2*p^3 + 2*E_4*K_1*K_2*c_a*c_b*p^3 + Gamma^2*K_1^2*c_b^2*p^2 - 2*Gamma^2*K_1*K_2*c_a*c_b*p^2 + Gamma^2*K_2^2*c_a^2*p^2 + 2*Gamma*K_1^2*c_b^2*p^3 - 4*Gamma*K_1*K_2*c_a*c_b*p^3 + 2*Gamma*K_2^2*c_a^2*p^3 + K_1^2*c_b^2*p^4 + 2*K_1*K_2*c_a*c_b*p^4 + K_2^2*c_a^2*p^4)^(1/2) + K_1*c_b*p^4 - E_3*p*(E_1^2*E_3^2*K_2^2*c_a^2 + 2*E_1^2*E_3*E_4*K_1*K_2*c_a^2 + 2*E_1^2*E_3*Gamma*K_2^2*c_a^2 + 2*E_1^2*E_3*K_2^2*c_a^2*p + E_1^2*E_4^2*K_1^2*c_a^2 - 2*E_1^2*E_4*Gamma*K_1*K_2*c_a^2 + 2*E_1^2*E_4*K_1*K_2*c_a^2*p + E_1^2*Gamma^2*K_2^2*c_a^2 + 2*E_1^2*Gamma*K_2^2*c_a^2*p + E_1^2*K_2^2*c_a^2*p^2 + 2*E_1*E_2*E_3^2*K_2^2*c_a*c_b + 4*E_1*E_2*E_3*E_4*K_1*K_2*c_a*c_b - 2*E_1*E_2*E_3*Gamma*K_1*K_2*c_a*c_b + 2*E_1*E_2*E_3*Gamma*K_2^2*c_a*c_b + 2*E_1*E_2*E_3*K_1*K_2*c_a*c_b*p + 2*E_1*E_2*E_3*K_2^2*c_a*c_b*p + 2*E_1*E_2*E_4^2*K_1^2*c_a*c_b + 2*E_1*E_2*E_4*Gamma*K_1^2*c_a*c_b - 2*E_1*E_2*E_4*Gamma*K_1*K_2*c_a*c_b + 2*E_1*E_2*E_4*K_1^2*c_a*c_b*p + 2*E_1*E_2*E_4*K_1*K_2*c_a*c_b*p - 2*E_1*E_2*Gamma^2*K_1*K_2*c_a*c_b - 4*E_1*E_2*Gamma*K_1*K_2*c_a*c_b*p + 2*E_1*E_2*K_1*K_2*c_a*c_b*p^2 + 2*E_1*E_3^2*K_2^2*c_a^2*p + 2*E_1*E_3^2*K_2^2*c_a*c_b*p + 4*E_1*E_3*E_4*K_1*K_2*c_a^2*p + 4*E_1*E_3*E_4*K_1*K_2*c_a*c_b*p - 2*E_1*E_3*Gamma*K_1*K_2*c_a*c_b*p + 4*E_1*E_3*Gamma*K_2^2*c_a^2*p + 2*E_1*E_3*Gamma*K_2^2*c_a*c_b*p + 2*E_1*E_3*K_1*K_2*c_a*c_b*p^2 + 4*E_1*E_3*K_2^2*c_a^2*p^2 + 2*E_1*E_3*K_2^2*c_a*c_b*p^2 + 2*E_1*E_4^2*K_1^2*c_a^2*p + 2*E_1*E_4^2*K_1^2*c_a*c_b*p + 2*E_1*E_4*Gamma*K_1^2*c_a*c_b*p - 4*E_1*E_4*Gamma*K_1*K_2*c_a^2*p - 2*E_1*E_4*Gamma*K_1*K_2*c_a*c_b*p + 2*E_1*E_4*K_1^2*c_a*c_b*p^2 + 4*E_1*E_4*K_1*K_2*c_a^2*p^2 + 2*E_1*E_4*K_1*K_2*c_a*c_b*p^2 - 2*E_1*Gamma^2*K_1*K_2*c_a*c_b*p + 2*E_1*Gamma^2*K_2^2*c_a^2*p - 4*E_1*Gamma*K_1*K_2*c_a*c_b*p^2 + 4*E_1*Gamma*K_2^2*c_a^2*p^2 + 2*E_1*K_1*K_2*c_a*c_b*p^3 + 2*E_1*K_2^2*c_a^2*p^3 + E_2^2*E_3^2*K_2^2*c_b^2 + 2*E_2^2*E_3*E_4*K_1*K_2*c_b^2 - 2*E_2^2*E_3*Gamma*K_1*K_2*c_b^2 + 2*E_2^2*E_3*K_1*K_2*c_b^2*p + E_2^2*E_4^2*K_1^2*c_b^2 + 2*E_2^2*E_4*Gamma*K_1^2*c_b^2 + 2*E_2^2*E_4*K_1^2*c_b^2*p + E_2^2*Gamma^2*K_1^2*c_b^2 + 2*E_2^2*Gamma*K_1^2*c_b^2*p + E_2^2*K_1^2*c_b^2*p^2 + 2*E_2*E_3^2*K_2^2*c_a*c_b*p + 2*E_2*E_3^2*K_2^2*c_b^2*p + 4*E_2*E_3*E_4*K_1*K_2*c_a*c_b*p + 4*E_2*E_3*E_4*K_1*K_2*c_b^2*p - 2*E_2*E_3*Gamma*K_1*K_2*c_a*c_b*p - 4*E_2*E_3*Gamma*K_1*K_2*c_b^2*p + 2*E_2*E_3*Gamma*K_2^2*c_a*c_b*p + 2*E_2*E_3*K_1*K_2*c_a*c_b*p^2 + 4*E_2*E_3*K_1*K_2*c_b^2*p^2 + 2*E_2*E_3*K_2^2*c_a*c_b*p^2 + 2*E_2*E_4^2*K_1^2*c_a*c_b*p + 2*E_2*E_4^2*K_1^2*c_b^2*p + 2*E_2*E_4*Gamma*K_1^2*c_a*c_b*p + 4*E_2*E_4*Gamma*K_1^2*c_b^2*p - 2*E_2*E_4*Gamma*K_1*K_2*c_a*c_b*p + 2*E_2*E_4*K_1^2*c_a*c_b*p^2 + 4*E_2*E_4*K_1^2*c_b^2*p^2 + 2*E_2*E_4*K_1*K_2*c_a*c_b*p^2 + 2*E_2*Gamma^2*K_1^2*c_b^2*p - 2*E_2*Gamma^2*K_1*K_2*c_a*c_b*p + 4*E_2*Gamma*K_1^2*c_b^2*p^2 - 4*E_2*Gamma*K_1*K_2*c_a*c_b*p^2 + 2*E_2*K_1^2*c_b^2*p^3 + 2*E_2*K_1*K_2*c_a*c_b*p^3 + E_3^2*K_2^2*c_a^2*p^2 + 2*E_3^2*K_2^2*c_a*c_b*p^2 + E_3^2*K_2^2*c_b^2*p^2 + 2*E_3*E_4*K_1*K_2*c_a^2*p^2 + 4*E_3*E_4*K_1*K_2*c_a*c_b*p^2 + 2*E_3*E_4*K_1*K_2*c_b^2*p^2 - 2*E_3*Gamma*K_1*K_2*c_a*c_b*p^2 - 2*E_3*Gamma*K_1*K_2*c_b^2*p^2 + 2*E_3*Gamma*K_2^2*c_a^2*p^2 + 2*E_3*Gamma*K_2^2*c_a*c_b*p^2 + 2*E_3*K_1*K_2*c_a*c_b*p^3 + 2*E_3*K_1*K_2*c_b^2*p^3 + 2*E_3*K_2^2*c_a^2*p^3 + 2*E_3*K_2^2*c_a*c_b*p^3 + E_4^2*K_1^2*c_a^2*p^2 + 2*E_4^2*K_1^2*c_a*c_b*p^2 + E_4^2*K_1^2*c_b^2*p^2 + 2*E_4*Gamma*K_1^2*c_a*c_b*p^2 + 2*E_4*Gamma*K_1^2*c_b^2*p^2 - 2*E_4*Gamma*K_1*K_2*c_a^2*p^2 - 2*E_4*Gamma*K_1*K_2*c_a*c_b*p^2 + 2*E_4*K_1^2*c_a*c_b*p^3 + 2*E_4*K_1^2*c_b^2*p^3 + 2*E_4*K_1*K_2*c_a^2*p^3 + 2*E_4*K_1*K_2*c_a*c_b*p^3 + Gamma^2*K_1^2*c_b^2*p^2 - 2*Gamma^2*K_1*K_2*c_a*c_b*p^2 + Gamma^2*K_2^2*c_a^2*p^2 + 2*Gamma*K_1^2*c_b^2*p^3 - 4*Gamma*K_1*K_2*c_a*c_b*p^3 + 2*Gamma*K_2^2*c_a^2*p^3 + K_1^2*c_b^2*p^4 + 2*K_1*K_2*c_a*c_b*p^4 + K_2^2*c_a^2*p^4)^(1/2) - E_4*p*(E_1^2*E_3^2*K_2^2*c_a^2 + 2*E_1^2*E_3*E_4*K_1*K_2*c_a^2 + 2*E_1^2*E_3*Gamma*K_2^2*c_a^2 + 2*E_1^2*E_3*K_2^2*c_a^2*p + E_1^2*E_4^2*K_1^2*c_a^2 - 2*E_1^2*E_4*Gamma*K_1*K_2*c_a^2 + 2*E_1^2*E_4*K_1*K_2*c_a^2*p + E_1^2*Gamma^2*K_2^2*c_a^2 + 2*E_1^2*Gamma*K_2^2*c_a^2*p + E_1^2*K_2^2*c_a^2*p^2 + 2*E_1*E_2*E_3^2*K_2^2*c_a*c_b + 4*E_1*E_2*E_3*E_4*K_1*K_2*c_a*c_b - 2*E_1*E_2*E_3*Gamma*K_1*K_2*c_a*c_b + 2*E_1*E_2*E_3*Gamma*K_2^2*c_a*c_b + 2*E_1*E_2*E_3*K_1*K_2*c_a*c_b*p + 2*E_1*E_2*E_3*K_2^2*c_a*c_b*p + 2*E_1*E_2*E_4^2*K_1^2*c_a*c_b + 2*E_1*E_2*E_4*Gamma*K_1^2*c_a*c_b - 2*E_1*E_2*E_4*Gamma*K_1*K_2*c_a*c_b + 2*E_1*E_2*E_4*K_1^2*c_a*c_b*p + 2*E_1*E_2*E_4*K_1*K_2*c_a*c_b*p - 2*E_1*E_2*Gamma^2*K_1*K_2*c_a*c_b - 4*E_1*E_2*Gamma*K_1*K_2*c_a*c_b*p + 2*E_1*E_2*K_1*K_2*c_a*c_b*p^2 + 2*E_1*E_3^2*K_2^2*c_a^2*p + 2*E_1*E_3^2*K_2^2*c_a*c_b*p + 4*E_1*E_3*E_4*K_1*K_2*c_a^2*p + 4*E_1*E_3*E_4*K_1*K_2*c_a*c_b*p - 2*E_1*E_3*Gamma*K_1*K_2*c_a*c_b*p + 4*E_1*E_3*Gamma*K_2^2*c_a^2*p + 2*E_1*E_3*Gamma*K_2^2*c_a*c_b*p + 2*E_1*E_3*K_1*K_2*c_a*c_b*p^2 + 4*E_1*E_3*K_2^2*c_a^2*p^2 + 2*E_1*E_3*K_2^2*c_a*c_b*p^2 + 2*E_1*E_4^2*K_1^2*c_a^2*p + 2*E_1*E_4^2*K_1^2*c_a*c_b*p + 2*E_1*E_4*Gamma*K_1^2*c_a*c_b*p - 4*E_1*E_4*Gamma*K_1*K_2*c_a^2*p - 2*E_1*E_4*Gamma*K_1*K_2*c_a*c_b*p + 2*E_1*E_4*K_1^2*c_a*c_b*p^2 + 4*E_1*E_4*K_1*K_2*c_a^2*p^2 + 2*E_1*E_4*K_1*K_2*c_a*c_b*p^2 - 2*E_1*Gamma^2*K_1*K_2*c_a*c_b*p + 2*E_1*Gamma^2*K_2^2*c_a^2*p - 4*E_1*Gamma*K_1*K_2*c_a*c_b*p^2 + 4*E_1*Gamma*K_2^2*c_a^2*p^2 + 2*E_1*K_1*K_2*c_a*c_b*p^3 + 2*E_1*K_2^2*c_a^2*p^3 + E_2^2*E_3^2*K_2^2*c_b^2 + 2*E_2^2*E_3*E_4*K_1*K_2*c_b^2 - 2*E_2^2*E_3*Gamma*K_1*K_2*c_b^2 + 2*E_2^2*E_3*K_1*K_2*c_b^2*p + E_2^2*E_4^2*K_1^2*c_b^2 + 2*E_2^2*E_4*Gamma*K_1^2*c_b^2 + 2*E_2^2*E_4*K_1^2*c_b^2*p + E_2^2*Gamma^2*K_1^2*c_b^2 + 2*E_2^2*Gamma*K_1^2*c_b^2*p + E_2^2*K_1^2*c_b^2*p^2 + 2*E_2*E_3^2*K_2^2*c_a*c_b*p + 2*E_2*E_3^2*K_2^2*c_b^2*p + 4*E_2*E_3*E_4*K_1*K_2*c_a*c_b*p + 4*E_2*E_3*E_4*K_1*K_2*c_b^2*p - 2*E_2*E_3*Gamma*K_1*K_2*c_a*c_b*p - 4*E_2*E_3*Gamma*K_1*K_2*c_b^2*p + 2*E_2*E_3*Gamma*K_2^2*c_a*c_b*p + 2*E_2*E_3*K_1*K_2*c_a*c_b*p^2 + 4*E_2*E_3*K_1*K_2*c_b^2*p^2 + 2*E_2*E_3*K_2^2*c_a*c_b*p^2 + 2*E_2*E_4^2*K_1^2*c_a*c_b*p + 2*E_2*E_4^2*K_1^2*c_b^2*p + 2*E_2*E_4*Gamma*K_1^2*c_a*c_b*p + 4*E_2*E_4*Gamma*K_1^2*c_b^2*p - 2*E_2*E_4*Gamma*K_1*K_2*c_a*c_b*p + 2*E_2*E_4*K_1^2*c_a*c_b*p^2 + 4*E_2*E_4*K_1^2*c_b^2*p^2 + 2*E_2*E_4*K_1*K_2*c_a*c_b*p^2 + 2*E_2*Gamma^2*K_1^2*c_b^2*p - 2*E_2*Gamma^2*K_1*K_2*c_a*c_b*p + 4*E_2*Gamma*K_1^2*c_b^2*p^2 - 4*E_2*Gamma*K_1*K_2*c_a*c_b*p^2 + 2*E_2*K_1^2*c_b^2*p^3 + 2*E_2*K_1*K_2*c_a*c_b*p^3 + E_3^2*K_2^2*c_a^2*p^2 + 2*E_3^2*K_2^2*c_a*c_b*p^2 + E_3^2*K_2^2*c_b^2*p^2 + 2*E_3*E_4*K_1*K_2*c_a^2*p^2 + 4*E_3*E_4*K_1*K_2*c_a*c_b*p^2 + 2*E_3*E_4*K_1*K_2*c_b^2*p^2 - 2*E_3*Gamma*K_1*K_2*c_a*c_b*p^2 - 2*E_3*Gamma*K_1*K_2*c_b^2*p^2 + 2*E_3*Gamma*K_2^2*c_a^2*p^2 + 2*E_3*Gamma*K_2^2*c_a*c_b*p^2 + 2*E_3*K_1*K_2*c_a*c_b*p^3 + 2*E_3*K_1*K_2*c_b^2*p^3 + 2*E_3*K_2^2*c_a^2*p^3 + 2*E_3*K_2^2*c_a*c_b*p^3 + E_4^2*K_1^2*c_a^2*p^2 + 2*E_4^2*K_1^2*c_a*c_b*p^2 + E_4^2*K_1^2*c_b^2*p^2 + 2*E_4*Gamma*K_1^2*c_a*c_b*p^2 + 2*E_4*Gamma*K_1^2*c_b^2*p^2 - 2*E_4*Gamma*K_1*K_2*c_a^2*p^2 - 2*E_4*Gamma*K_1*K_2*c_a*c_b*p^2 + 2*E_4*K_1^2*c_a*c_b*p^3 + 2*E_4*K_1^2*c_b^2*p^3 + 2*E_4*K_1*K_2*c_a^2*p^3 + 2*E_4*K_1*K_2*c_a*c_b*p^3 + Gamma^2*K_1^2*c_b^2*p^2 - 2*Gamma^2*K_1*K_2*c_a*c_b*p^2 + Gamma^2*K_2^2*c_a^2*p^2 + 2*Gamma*K_1^2*c_b^2*p^3 - 4*Gamma*K_1*K_2*c_a*c_b*p^3 + 2*Gamma*K_2^2*c_a^2*p^3 + K_1^2*c_b^2*p^4 + 2*K_1*K_2*c_a*c_b*p^4 + K_2^2*c_a^2*p^4)^(1/2) + E_1*K_2*c_a*p^3 + 2*E_3*K_2*c_a*p^3 + E_4*K_1*c_a*p^3 + E_4*K_2*c_a*p^3 + E_2*K_1*c_b*p^3 + E_3*K_1*c_b*p^3 + E_3*K_2*c_b*p^3 + 2*E_4*K_1*c_b*p^3 + Gamma*K_2*c_a*p^3 + Gamma*K_1*c_b*p^3 + E_3^2*K_2*c_a*p^2 + E_4^2*K_1*c_a*p^2 + E_3^2*K_2*c_b*p^2 + E_4^2*K_1*c_b*p^2 + 2*E_1*E_3*K_2*c_a*p^2 + E_1*E_4*K_1*c_a*p^2 + E_1*E_3^2*K_2*c_a*p + E_1*E_4^2*K_1*c_a*p + E_1*E_4*K_2*c_a*p^2 + E_3*E_4*K_1*c_a*p^2 + E_3*E_4*K_2*c_a*p^2 + E_2*E_3*K_1*c_b*p^2 + E_2*E_3*K_2*c_b*p^2 + 2*E_2*E_4*K_1*c_b*p^2 + E_2*E_3^2*K_2*c_b*p + E_2*E_4^2*K_1*c_b*p + E_3*E_4*K_1*c_b*p^2 + E_3*E_4*K_2*c_b*p^2 + E_1*Gamma*K_2*c_a*p^2 + E_3*Gamma*K_2*c_a*p^2 + 2*E_4*Gamma*K_1*c_a*p^2 + E_4*Gamma*K_2*c_a*p^2 + E_2*Gamma*K_1*c_b*p^2 + E_3*Gamma*K_1*c_b*p^2 + 2*E_3*Gamma*K_2*c_b*p^2 + E_4*Gamma*K_1*c_b*p^2 + 2*E_1*E_3*E_4*Gamma*K_1*c_a + 2*E_1*E_3*E_4*Gamma*K_2*c_a + 2*E_2*E_3*E_4*Gamma*K_1*c_b + 2*E_2*E_3*E_4*Gamma*K_2*c_b + E_1*E_3*E_4*K_1*c_a*p + E_1*E_3*E_4*K_2*c_a*p + E_2*E_3*E_4*K_1*c_b*p + E_2*E_3*E_4*K_2*c_b*p + E_1*E_3*Gamma*K_2*c_a*p + 2*E_1*E_4*Gamma*K_1*c_a*p + E_1*E_4*Gamma*K_2*c_a*p + 2*E_3*E_4*Gamma*K_1*c_a*p + 2*E_3*E_4*Gamma*K_2*c_a*p + E_2*E_3*Gamma*K_1*c_b*p + 2*E_2*E_3*Gamma*K_2*c_b*p + E_2*E_4*Gamma*K_1*c_b*p + 2*E_3*E_4*Gamma*K_1*c_b*p + 2*E_3*E_4*Gamma*K_2*c_b*p)/(2*(p^2*(E_3*K_2^2 + E_4*K_1^2 + 3*E_3*K_1*K_2 + 3*E_4*K_1*K_2) + Gamma*(K_1*p + E_3*K_1 + E_3*K_2)*(K_2*p + E_4*K_1 + E_4*K_2) + 2*K_1*K_2*p^3 + p*(E_3*K_2 + E_4*K_1)*(E_3 + E_4)*(K_1 + K_2)));
 xs_givencabg=@(c_a,c_b,g)[(c_a*p^2+ E_1*E_3*c_a+ E_2*E_3*c_b- E_3*K_1*g - E_3*K_2*g + E_1*c_a*p + E_3*c_a*p + E_3*c_b*p - K_1*g*p)/(p*(E_3+ E_4+ p) );
     (c_b*p^2+ E_1*E_4*c_a+ E_2*E_4*c_b- E_4*K_1*g - E_4*K_2*g + E_4*c_a*p + E_2*c_b*p + E_4*c_b*p - K_2*g*p)/(p*(E_3+ E_4+ p) )];
 
 analytical_steadygivenenv=@(env)[growth_givencab(env(1),env(2));
 xs_givencabg(env(1),env(2),growth_givencab(env(1),env(2)))];
 metabfuns.analytical_steadygivenenv=analytical_steadygivenenv;

 % if E is unknown
 
%Growth_givenE=@(cs,xs,Es)G(cs(1),cs(2),xs,Es);
%dxdt_givenE=@(cs,xs,Es)dP_dt(cs(1),cs(2),xs,Es);


% FB depends on d
 if E_3>10^-4
     GC_W_dim2=@(c_a,g)(p^2*(E_1^2*Gamma^2*c_a^2 + 2*E_1*E_3*Gamma*K_2*c_a*g - 2*E_1*E_4*Gamma*K_1*c_a*g - 2*E_1*Gamma^2*K_1*c_a*g + 2*E_1*Gamma^2*c_a^2*p - 2*E_1*Gamma*K_1*c_a*g*p + E_3^2*K_2^2*g^2 + 2*E_3*E_4*K_1*K_2*g^2 - 2*E_3*Gamma*K_1*K_2*g^2 + 2*E_3*Gamma*K_2*c_a*g*p + 2*E_3*K_1*K_2*g^2*p + E_4^2*K_1^2*g^2 + 2*E_4*Gamma*K_1^2*g^2 - 2*E_4*Gamma*K_1*c_a*g*p + 2*E_4*K_1^2*g^2*p + Gamma^2*K_1^2*g^2 - 2*Gamma^2*K_1*c_a*g*p + Gamma^2*c_a^2*p^2 + 2*Gamma*K_1^2*g^2*p - 2*Gamma*K_1*c_a*g*p^2 + K_1^2*g^2*p^2)^(1/2) + E_3*p*(E_1^2*Gamma^2*c_a^2 + 2*E_1*E_3*Gamma*K_2*c_a*g - 2*E_1*E_4*Gamma*K_1*c_a*g - 2*E_1*Gamma^2*K_1*c_a*g + 2*E_1*Gamma^2*c_a^2*p - 2*E_1*Gamma*K_1*c_a*g*p + E_3^2*K_2^2*g^2 + 2*E_3*E_4*K_1*K_2*g^2 - 2*E_3*Gamma*K_1*K_2*g^2 + 2*E_3*Gamma*K_2*c_a*g*p + 2*E_3*K_1*K_2*g^2*p + E_4^2*K_1^2*g^2 + 2*E_4*Gamma*K_1^2*g^2 - 2*E_4*Gamma*K_1*c_a*g*p + 2*E_4*K_1^2*g^2*p + Gamma^2*K_1^2*g^2 - 2*Gamma^2*K_1*c_a*g*p + Gamma^2*c_a^2*p^2 + 2*Gamma*K_1^2*g^2*p - 2*Gamma*K_1*c_a*g*p^2 + K_1^2*g^2*p^2)^(1/2) + E_4*p*(E_1^2*Gamma^2*c_a^2 + 2*E_1*E_3*Gamma*K_2*c_a*g - 2*E_1*E_4*Gamma*K_1*c_a*g - 2*E_1*Gamma^2*K_1*c_a*g + 2*E_1*Gamma^2*c_a^2*p - 2*E_1*Gamma*K_1*c_a*g*p + E_3^2*K_2^2*g^2 + 2*E_3*E_4*K_1*K_2*g^2 - 2*E_3*Gamma*K_1*K_2*g^2 + 2*E_3*Gamma*K_2*c_a*g*p + 2*E_3*K_1*K_2*g^2*p + E_4^2*K_1^2*g^2 + 2*E_4*Gamma*K_1^2*g^2 - 2*E_4*Gamma*K_1*c_a*g*p + 2*E_4*K_1^2*g^2*p + Gamma^2*K_1^2*g^2 - 2*Gamma^2*K_1*c_a*g*p + Gamma^2*c_a^2*p^2 + 2*Gamma*K_1^2*g^2*p - 2*Gamma*K_1*c_a*g*p^2 + K_1^2*g^2*p^2)^(1/2) - Gamma*c_a*p^3 + K_1*g*p^3 - E_1*Gamma*c_a*p^2 - E_3*Gamma*c_a*p^2 - E_4*Gamma*c_a*p^2 + E_3*K_1*g*p^2 + E_3*K_2*g*p^2 + 2*E_4*K_1*g*p^2 + E_3^2*K_2*g*p + E_4^2*K_1*g*p + Gamma*K_1*g*p^2 - E_1*E_3*Gamma*c_a*p - E_1*E_4*Gamma*c_a*p - 2*E_3*E_4*Gamma*c_a*p + E_3*E_4*K_1*g*p + E_3*E_4*K_2*g*p + E_3*Gamma*K_1*g*p + 2*E_3*Gamma*K_2*g*p + E_4*Gamma*K_1*g*p - 2*E_1*E_3*E_4*Gamma*c_a + 2*E_3*E_4*Gamma*K_1*g + 2*E_3*E_4*Gamma*K_2*g)/(2*E_3*Gamma*(E_2 + p)*(E_4 + p));
 
 else
     GC_W_dim2=@(c_a,g)-(K_2/(K_1/(p*(E_1*c_a - K_1*g + c_a*p)) - Gamma/(g*p*(E_4 + p))) + E_1*E_4*c_a - E_4*K_1*g - E_4*K_2*g + E_4*c_a*p - K_2*g*p)/(E_2*p + E_4*p + p^2 + E_2*E_4);
 end
 
 incellvfun=[];
 incellvfun=@(c_a,c_b,g)[(c_a*p^2 + E_1*E_3*c_a + E_2*E_3*c_b - E_3*K_1*g - E_3*K_2*g + E_1*c_a*p + E_3*c_a*p + E_3*c_b*p - K_1*g*p)/(E_3*p + E_4*p + p^2);
    (c_b*p^2 + E_1*E_4*c_a + E_2*E_4*c_b - E_4*K_1*g - E_4*K_2*g + E_4*c_a*p + E_2*c_b*p + E_4*c_b*p - K_2*g*p)/(E_3*p + E_4*p + p^2)
 ];

metabfuns.analytical_FBGCincell_dim2={[],GC_W_dim2,incellvfun};
  
species_id=0;
if E_2<10^-4 && E_3<10^-4
    species_id=1;
elseif E_1<10^-4 && E_4<10^-4
    species_id=2;
elseif E_3<10^-4 && E_4<10^-4
    species_id=3;
end
 

% general, no short cut
metabfuns.Growth_givenE=Growth_givenE;
metabfuns.dxdt_givenE=dxdt_givenE;
    
if species_id==1 % a->b converter
    
   
elseif species_id==2 % b->a converter
    
elseif species_id==3 % importer
    
    maxg_givenenv=@(c_a,c_b)(Gamma*c_a*c_b*(2*p + 1))/(Gamma*K_2*c_a + Gamma*K_1*c_b + K_2*c_a*p + K_1*c_b*p + 2*K_1^(1/2)*K_2^(1/2)*c_a^(1/2)*c_b^(1/2)*p);
    optE1=@(c_a,c_b)(Gamma*K_1*c_b + K_1*c_b*p - K_2*c_a*p^2 + K_1*c_b*p^2 - Gamma*K_2*c_a*p + Gamma*K_1*c_b*p + K_1^(1/2)*K_2^(1/2)*c_a^(1/2)*c_b^(1/2)*p)/(Gamma*K_2*c_a + Gamma*K_1*c_b + K_2*c_a*p + K_1*c_b*p + 2*K_1^(1/2)*K_2^(1/2)*c_a^(1/2)*c_b^(1/2)*p);

    analytical_opt_givenenv=@(env)[maxg_givenenv(env(1),env(2));
        optE1(env(1),env(2));
        1-optE1(env(1),env(2));
        0;
        0;];
    
    metabfuns.analytical_opt_givenenv=analytical_opt_givenenv;
end

% funclass=[];
% funclass.absolution=[];
% % funclass.F_steadygrowth_ge=[];
% % funclass.Fs_steadys_flux_e=[];
% % funclass.steadytestfun=[];
% % 
% % funclass.dxdt_inchemo=[];
% % funclass.b_fluxsolution_givena =[];% the flux balance curve
% % funclass.b_growthsolution_givena=[]; % the growth curve
% % funclass.min_ab=[]; % the minimal a and b given the growth function
% % funclass.g_ab=[]; % growth rate as a function of ab
% 
% % load parameters
% env_num=chemostat_para.env_num;
% supplys(1)=chemostat_para.supplys(1);
% supplys(2)=chemostat_para.supplys(2);
% d=chemostat_para.d;
% 
% % parameter for cells
% varible_num=species_para.varible_num;
% 
% Gamma=species_para.Gamma;
% K_1=species_para.K_1;
% K_2=species_para.K_2;
% p=species_para.p;
% E_1=species_para.E_1;
% E_2=species_para.E_2;
% E_4=species_para.E_4;
% E_3=species_para.E_3;
% 
% u=d;% set the nutrient dillution rate the same as cell death rate
% g=d;
% 
% %%
% % solution for single species in one chemostat
% % g=d;
% if E_4>0
%  funclass.b_fluxsolution_givena=@(a)(K_1*d*E_4 - (supplys(1)^2*E_4^2*p^2 + 2*supplys(1)^2*E_4^2*p*E_2 + supplys(1)^2*E_4^2*E_2^2 + 2*supplys(1)*supplys(2)*E_4^2*p^2 + 4*supplys(1)*supplys(2)*E_4^2*p*E_2 + 2*supplys(1)*supplys(2)*E_4^2*E_2^2 + 2*supplys(1)*K_1*d*E_4^2*p + 2*supplys(1)*K_1*d*E_4^2*E_2 + 4*supplys(1)*K_1*d*E_4*E_3*p + 4*supplys(1)*K_1*d*E_4*E_3*E_2 + 2*supplys(1)*K_1*d*E_4*p^2 + 2*supplys(1)*K_1*d*E_4*p*E_2 + 2*supplys(1)*K_2*d*E_4^2*p + 2*supplys(1)*K_2*d*E_4^2*E_2 + 4*supplys(1)*K_2*d*E_4*E_3*p + 4*supplys(1)*K_2*d*E_4*E_3*E_2 + 4*supplys(1)*K_2*d*E_4*p^2 + 4*supplys(1)*K_2*d*E_4*p*E_2 - 2*supplys(1)*a*E_4^2*p^2 - 4*supplys(1)*a*E_4^2*p*E_2 - 2*supplys(1)*a*E_4^2*E_2^2 - 2*supplys(1)*a*E_4*E_3*p^2 - 2*supplys(1)*a*E_4*E_3*p*E_1 - 2*supplys(1)*a*E_4*E_3*p*E_2 - 2*supplys(1)*a*E_4*E_3*E_1*E_2 + supplys(2)^2*E_4^2*p^2 + 2*supplys(2)^2*E_4^2*p*E_2 + supplys(2)^2*E_4^2*E_2^2 - 2*supplys(2)*K_1*d*E_4^2*p - 2*supplys(2)*K_1*d*E_4^2*E_2 - 2*supplys(2)*K_1*d*E_4*p^2 - 2*supplys(2)*K_1*d*E_4*p*E_2 - 2*supplys(2)*K_2*d*E_4^2*p - 2*supplys(2)*K_2*d*E_4^2*E_2 - 2*supplys(2)*a*E_4^2*p^2 - 4*supplys(2)*a*E_4^2*p*E_2 - 2*supplys(2)*a*E_4^2*E_2^2 - 2*supplys(2)*a*E_4*E_3*p^2 - 2*supplys(2)*a*E_4*E_3*p*E_1 - 2*supplys(2)*a*E_4*E_3*p*E_2 - 2*supplys(2)*a*E_4*E_3*E_1*E_2 + K_1^2*d^2*E_4^2 + 2*K_1^2*d^2*E_4*p + K_1^2*d^2*p^2 + 2*K_1*K_2*d^2*E_4^2 + 2*K_1*K_2*d^2*E_4*p - 2*K_1*a*d*E_4^2*p - 2*K_1*a*d*E_4^2*E_2 - 2*K_1*a*d*E_4*E_3*p + 2*K_1*a*d*E_4*E_3*E_1 - 4*K_1*a*d*E_4*E_3*E_2 - 2*K_1*a*d*E_4*p^2 - 2*K_1*a*d*E_4*p*E_2 + 2*K_1*a*d*E_3*p^2 + 2*K_1*a*d*E_3*p*E_1 + K_2^2*d^2*E_4^2 - 2*K_2*a*d*E_4^2*p - 2*K_2*a*d*E_4^2*E_2 - 2*K_2*a*d*E_4*E_3*p + 2*K_2*a*d*E_4*E_3*E_1 - 4*K_2*a*d*E_4*E_3*E_2 - 4*K_2*a*d*E_4*p^2 - 4*K_2*a*d*E_4*p*E_2 + a^2*E_4^2*p^2 + 2*a^2*E_4^2*p*E_2 + a^2*E_4^2*E_2^2 + 2*a^2*E_4*E_3*p^2 + 2*a^2*E_4*E_3*p*E_1 + 2*a^2*E_4*E_3*p*E_2 + 2*a^2*E_4*E_3*E_1*E_2 + a^2*E_3^2*p^2 + 2*a^2*E_3^2*p*E_1 + a^2*E_3^2*E_1^2)^(1/2) + K_2*d*E_4 + K_1*d*p + supplys(1)*E_4*p + supplys(2)*E_4*p + supplys(1)*E_4*E_2 + supplys(2)*E_4*E_2 - a*E_4*p + a*E_3*p + a*E_3*E_1 - a*E_4*E_2)/(2*E_4*(p + E_2));
%  funclass.b_growthsolution_givena=@(a)(p^2*(K_1^2*Gamma^2*d^2 + 2*K_1^2*Gamma*d^2*E_3 + 2*K_1^2*Gamma*d^2*p + K_1^2*d^2*E_3^2 + 2*K_1^2*d^2*E_3*p + K_1^2*d^2*p^2 - 2*K_1*K_2*Gamma*d^2*E_4 + 2*K_1*K_2*d^2*E_4*E_3 + 2*K_1*K_2*d^2*E_4*p - 2*K_1*Gamma^2*a*d*p - 2*K_1*Gamma^2*a*d*E_1 - 2*K_1*Gamma*a*d*E_3*p - 2*K_1*Gamma*a*d*E_3*E_1 - 2*K_1*Gamma*a*d*p^2 - 2*K_1*Gamma*a*d*p*E_1 + K_2^2*d^2*E_4^2 + 2*K_2*Gamma*a*d*E_4*p + 2*K_2*Gamma*a*d*E_4*E_1 + Gamma^2*a^2*p^2 + 2*Gamma^2*a^2*p*E_1 + Gamma^2*a^2*E_1^2)^(1/2) + E_4*p*(K_1^2*Gamma^2*d^2 + 2*K_1^2*Gamma*d^2*E_3 + 2*K_1^2*Gamma*d^2*p + K_1^2*d^2*E_3^2 + 2*K_1^2*d^2*E_3*p + K_1^2*d^2*p^2 - 2*K_1*K_2*Gamma*d^2*E_4 + 2*K_1*K_2*d^2*E_4*E_3 + 2*K_1*K_2*d^2*E_4*p - 2*K_1*Gamma^2*a*d*p - 2*K_1*Gamma^2*a*d*E_1 - 2*K_1*Gamma*a*d*E_3*p - 2*K_1*Gamma*a*d*E_3*E_1 - 2*K_1*Gamma*a*d*p^2 - 2*K_1*Gamma*a*d*p*E_1 + K_2^2*d^2*E_4^2 + 2*K_2*Gamma*a*d*E_4*p + 2*K_2*Gamma*a*d*E_4*E_1 + Gamma^2*a^2*p^2 + 2*Gamma^2*a^2*p*E_1 + Gamma^2*a^2*E_1^2)^(1/2) + E_3*p*(K_1^2*Gamma^2*d^2 + 2*K_1^2*Gamma*d^2*E_3 + 2*K_1^2*Gamma*d^2*p + K_1^2*d^2*E_3^2 + 2*K_1^2*d^2*E_3*p + K_1^2*d^2*p^2 - 2*K_1*K_2*Gamma*d^2*E_4 + 2*K_1*K_2*d^2*E_4*E_3 + 2*K_1*K_2*d^2*E_4*p - 2*K_1*Gamma^2*a*d*p - 2*K_1*Gamma^2*a*d*E_1 - 2*K_1*Gamma*a*d*E_3*p - 2*K_1*Gamma*a*d*E_3*E_1 - 2*K_1*Gamma*a*d*p^2 - 2*K_1*Gamma*a*d*p*E_1 + K_2^2*d^2*E_4^2 + 2*K_2*Gamma*a*d*E_4*p + 2*K_2*Gamma*a*d*E_4*E_1 + Gamma^2*a^2*p^2 + 2*Gamma^2*a^2*p*E_1 + Gamma^2*a^2*E_1^2)^(1/2) + K_1*d*p^3 - Gamma*a*p^3 + K_1*Gamma*d*p^2 + K_1*d*E_4*p^2 + 2*K_1*d*E_3*p^2 + K_1*d*E_3^2*p + K_2*d*E_4*p^2 + K_2*d*E_4^2*p - Gamma*a*E_4*p^2 - Gamma*a*E_3*p^2 - Gamma*a*p^2*E_1 + 2*K_1*Gamma*d*E_4*E_3 + 2*K_2*Gamma*d*E_4*E_3 + K_1*Gamma*d*E_4*p + K_1*Gamma*d*E_3*p + 2*K_2*Gamma*d*E_4*p + K_1*d*E_4*E_3*p + K_2*d*E_4*E_3*p - 2*Gamma*a*E_4*E_3*p - 2*Gamma*a*E_4*E_3*E_1 - Gamma*a*E_4*p*E_1 - Gamma*a*E_3*p*E_1)/(2*Gamma*E_4*(E_3 + p)*(p + E_2));
% else
%     funclass.b_fluxsolution_givena=@(a)(supplys(2)*K_1*d*p - a^2*E_3*p - supplys(1)*K_1*d*E_3 - supplys(1)*K_2*d*E_3 - supplys(1)*K_2*d*p - a^2*E_3*E_1 + K_1*a*d*E_3 + K_2*a*d*E_3 + K_2*a*d*p + supplys(1)*a*E_3*p + supplys(2)*a*E_3*p + supplys(1)*a*E_3*E_1 + supplys(2)*a*E_3*E_1)/(K_1*d*p + a*E_3*p + a*E_3*E_1);
%     funclass.b_growthsolution_givena=@(a)(K_1*d*E_3 + K_2*d*E_3 + K_2*d*p - a*E_3*p - a*E_3*E_1 + (K_2*(p^2 + E_3*p))/(Gamma/d - (K_1*(p^2 + E_3*p))/(a*p^2 - K_1*d*p + a*p*E_1)))/(E_3*p + E_3*E_2 + p*E_2 + p^2);
% end
% 
%     
%  funclass.min_ab=[0,0];
% % 
% % 
% funclass.F_steadygrowth_ge=@(d,a,b)Gamma/((K_1*(E_4*p + E_3*p + p^2))/(a*p^2 - K_1*d*E_4 - K_2*d*E_4 - K_1*d*p + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1) + (K_2*(E_4*p + E_3*p + p^2))/(b*p^2 - K_1*d*E_3 - K_2*d*E_3 - K_2*d*p + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2)) - d;
% funclass.Fs_steadys_flux_e=@(a,b)(supplys(2)-b)*(g*(K_1*E_4+ K_2*E_4+ K_1*p)+ a*E_3*(p + E_1 )- b*E_4*(p+E_2 ))-(supplys(1)-a)*(g*(K_1*E_3+ K_2*E_3+ K_2*p)+ b*E_4*(p +E_2 )- a*E_3*(p+E_1 ));
% 
% steady_c1=@(a,b,g)(a*(p^2+ E_4*(p+E_1 )+p*E_1 )+b*E_4*(p +E_2)- g*(E_4*(K_1+ K_2)+ K_1*p) )/(p*(E_4+ E_3  + p));
% steady_c2=@(a,b,g)(b*(p^2+ E_3*(p+ E_2 )+p*E_2 )+a*E_3*(p + E_1 )-g*(E_3*(K_1+K_2)+K_2*p))/(p*(E_4+ E_3  + p));
% Ma_fun=@(a,b,g)((supplys(1)-a)*u)/((E_1+p)*a-p*steady_c1(a,b,g) );
% Mb_fun=@(a,b,g)((supplys(2)-b)*u)/((E_2+p)*b-p*steady_c2(a,b,g) );
% funclass.steadytestfun=@(a,b,g)[a;
%      b;
%      min([Ma_fun(a,b,g),Mb_fun(a,b,g)]);
%      steady_c1(a,b,g);
%      steady_c2(a,b,g);
%      ];
% % 
% % 
% %% ODEs for single species in one chemostat
% G=@(c_1,c_2)Gamma/(K_1/c_1 +K_2/c_2 );
% 
% Intake_a=@(a,b,M,c_1,c_2)(E_1+p)*a-p*c_1;
% Intake_b=@(a,b,M,c_1,c_2)(E_2+p)*b-p*c_2;
% % %the changing rate
% % % changing rate of varibles
% da_dt=@(a,b,M,c_1,c_2)(supplys(1)-a)*u-M*Intake_a(a,b,M,c_1,c_2);
% db_dt=@(a,b,M,c_1,c_2)(supplys(2)-b)*u-M*Intake_b(a,b,M,c_1,c_2);
% dM_dt=@(a,b,M,c_1,c_2)M*(G(c_1,c_2)-d);
% dc_1_dt=@(a,b,M,c_1,c_2)(E_1+p)*a-p*c_1-E_3*c_1+E_4*c_2-G(c_1,c_2)*K_1;
% dc_2_dt=@(a,b,M,c_1,c_2)(E_2+p)*b-p*c_2-E_4*c_2+E_3*c_1-G(c_1,c_2)*K_2;
% % 
% funclass.dxdt_inchemo=@(x)[da_dt(x(1),x(2),x(3),x(4),x(5));
%     db_dt(x(1),x(2),x(3),x(4),x(5));
%     dM_dt(x(1),x(2),x(3),x(4),x(5));
%     dc_1_dt(x(1),x(2),x(3),x(4),x(5));
%     dc_2_dt(x(1),x(2),x(3),x(4),x(5));
%     ];
% 
% funclass.inout_env=@(env)([supplys(1);supplys(2)]-env)*u;
% funclass.consumed_env=@(x)[Intake_a(x(1),x(2),x(3),x(4),x(5))*x(3);
%      Intake_b(x(1),x(2),x(3),x(4),x(5))*x(3);];
% %funclass.g_ab=@(a,b)G(a,b,nan);
% 
% %% for optimization 
% diffFuns= @(a,b,E_1,E_2,E_4)[Gamma/(p*(1/(d*(2*E_4 - p + 2*E_1 + 2*E_2 - 2) + b*(p*E_2 - (p + E_2)*(E_4 + E_1 + E_2 - 1) + p^2) - a*(p + E_1)*(E_4 + E_1 + E_2 - 1)) + 1/(a*(E_4*(p + E_1) + p*E_1 + p^2) - d*(2*E_4 + p) + b*E_4*(p + E_2)))*(p - E_1 - E_2 + 1)^2) - (Gamma*((a*(p + E_1) - 2*d + b*(p + E_2) + a*(E_4 + E_1 + E_2 - 1))/(d*(2*E_4 - p + 2*E_1 + 2*E_2 - 2) + b*(p*E_2 - (p + E_2)*(E_4 + E_1 + E_2 - 1) + p^2) - a*(p + E_1)*(E_4 + E_1 + E_2 - 1))^2 - (a*(E_4 + p))/(a*(E_4*(p + E_1) + p*E_1 + p^2) - d*(2*E_4 + p) + b*E_4*(p + E_2))^2))/(p*(1/(d*(2*E_4 - p + 2*E_1 + 2*E_2 - 2) + b*(p*E_2 - (p + E_2)*(E_4 + E_1 + E_2 - 1) + p^2) - a*(p + E_1)*(E_4 + E_1 + E_2 - 1)) + 1/(a*(E_4*(p + E_1) + p*E_1 + p^2) - d*(2*E_4 + p) + b*E_4*(p + E_2)))^2*(p - E_1 - E_2 + 1));
% Gamma/(p*(1/(d*(2*E_4 - p + 2*E_1 + 2*E_2 - 2) + b*(p*E_2 - (p + E_2)*(E_4 + E_1 + E_2 - 1) + p^2) - a*(p + E_1)*(E_4 + E_1 + E_2 - 1)) + 1/(a*(E_4*(p + E_1) + p*E_1 + p^2) - d*(2*E_4 + p) + b*E_4*(p + E_2)))*(p - E_1 - E_2 + 1)^2) - (Gamma*((a*(p + E_1) - 2*d + b*(E_4 + E_1 + 2*E_2 - 1))/(d*(2*E_4 - p + 2*E_1 + 2*E_2 - 2) + b*(p*E_2 - (p + E_2)*(E_4 + E_1 + E_2 - 1) + p^2) - a*(p + E_1)*(E_4 + E_1 + E_2 - 1))^2 - (b*E_4)/(a*(E_4*(p + E_1) + p*E_1 + p^2) - d*(2*E_4 + p) + b*E_4*(p + E_2))^2))/(p*(1/(d*(2*E_4 - p + 2*E_1 + 2*E_2 - 2) + b*(p*E_2 - (p + E_2)*(E_4 + E_1 + E_2 - 1) + p^2) - a*(p + E_1)*(E_4 + E_1 + E_2 - 1)) + 1/(a*(E_4*(p + E_1) + p*E_1 + p^2) - d*(2*E_4 + p) + b*E_4*(p + E_2)))^2*(p - E_1 - E_2 + 1));
% -(Gamma*((a*(p + E_1) - 2*d + b*(p + E_2))/(d*(2*E_4 - p + 2*E_1 + 2*E_2 - 2) + b*(p*E_2 - (p + E_2)*(E_4 + E_1 + E_2 - 1) + p^2) - a*(p + E_1)*(E_4 + E_1 + E_2 - 1))^2 - (a*(p + E_1) - 2*d + b*(p + E_2))/(a*(E_4*(p + E_1) + p*E_1 + p^2) - d*(2*E_4 + p) + b*E_4*(p + E_2))^2))/(p*(1/(d*(2*E_4 - p + 2*E_1 + 2*E_2 - 2) + b*(p*E_2 - (p + E_2)*(E_4 + E_1 + E_2 - 1) + p^2) - a*(p + E_1)*(E_4 + E_1 + E_2 - 1)) + 1/(a*(E_4*(p + E_1) + p*E_1 + p^2) - d*(2*E_4 + p) + b*E_4*(p + E_2)))^2*(p - E_1 - E_2 + 1)); 
% ];
% funclass.zeroforopt=@(x)[funclass.F_steadygrowth_ge(d,x(1),x(2));
% funclass.Fs_steadys_flux_e(x(1),x(2));
% diffFuns(x(1),x(2),x(3),x(4),x(5))];
% funclass.nonezeroforopt=@(x)[funclass.steadytestfun(x(1),x(2),d);
%     x(3);
%     x(4);
%     x(5);
%     1-x(3)-x(4)-x(5)];
% 
% g_ab=@(a,b,E_1,E_2,E_4,E_3)(K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 - K_1^2*E_3*p^2*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1^2*E_3^2*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_2^2*E_4*p^2*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_2^2*E_4^2*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 - 2*K_1*K_2*p^3*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1*K_2*Gamma*p^2*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - 3*K_1*K_2*E_4*p^2*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1*K_2*E_4^2*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - 3*K_1*K_2*E_3*p^2*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1*K_2*E_3^2*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1^2*Gamma*E_4*E_3*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_2^2*Gamma*E_4*E_3*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1^2*Gamma*E_3*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_2^2*Gamma*E_4*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1^2*E_4*E_3*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_2^2*E_4*E_3*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 - 2*K_1*K_2*Gamma*E_4*E_3*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1*K_2*Gamma*E_4*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - K_1*K_2*Gamma*E_3*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) - 2*K_1*K_2*E_4*E_3*p*((K_2*a*p^4 + K_1*b*p^4 + K_2*Gamma*a*p^3 + K_1*Gamma*b*p^3 + K_1*a*E_3*p^3 + 2*K_2*a*E_4*p^3 + K_2*a*E_3*p^3 + K_1*b*E_4*p^3 + 2*K_1*b*E_3*p^3 + K_2*b*E_4*p^3 + K_2*a*p^3*E_1 + K_1*b*p^3*E_2 + K_1*a*E_3^2*p^2 + K_2*a*E_4^2*p^2 + K_1*b*E_3^2*p^2 + K_2*b*E_4^2*p^2 + 2*K_1*Gamma*a*E_3*p^2 + K_2*Gamma*a*E_4*p^2 + K_2*Gamma*a*E_3*p^2 + K_1*Gamma*b*E_4*p^2 + K_1*Gamma*b*E_3*p^2 + 2*K_2*Gamma*b*E_4*p^2 + K_2*Gamma*a*p^2*E_1 + K_1*Gamma*b*p^2*E_2 + K_1*a*E_4*E_3*p^2 + K_2*a*E_4*E_3*p^2 + K_1*b*E_4*E_3*p^2 + K_2*b*E_4*E_3*p^2 + K_1*a*E_3*p^2*E_1 + K_1*a*E_3^2*p*E_1 + 2*K_2*a*E_4*p^2*E_1 + K_2*a*E_4^2*p*E_1 + K_2*a*E_3*p^2*E_1 + K_1*b*E_4*p^2*E_2 + 2*K_1*b*E_3*p^2*E_2 + K_1*b*E_3^2*p*E_2 + K_2*b*E_4*p^2*E_2 + K_2*b*E_4^2*p*E_2 + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)^2/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p)^2 - (4*Gamma*(a*p^2 + a*E_4*p + b*E_4*p + a*E_4*E_1 + b*E_4*E_2 + a*p*E_1)*(b*p^2 + a*E_3*p + b*E_3*p + a*E_3*E_1 + b*E_3*E_2 + b*p*E_2))/(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p))^(1/2) + 2*K_1*Gamma*a*E_4*E_3*p + 2*K_2*Gamma*a*E_4*E_3*p + 2*K_1*Gamma*b*E_4*E_3*p + 2*K_2*Gamma*b*E_4*E_3*p + 2*K_1*Gamma*a*E_4*E_3*E_1 + 2*K_2*Gamma*a*E_4*E_3*E_1 + 2*K_1*Gamma*b*E_4*E_3*E_2 + 2*K_2*Gamma*b*E_4*E_3*E_2 + 2*K_1*Gamma*a*E_3*p*E_1 + K_2*Gamma*a*E_4*p*E_1 + K_2*Gamma*a*E_3*p*E_1 + K_1*Gamma*b*E_4*p*E_2 + K_1*Gamma*b*E_3*p*E_2 + 2*K_2*Gamma*b*E_4*p*E_2 + K_1*a*E_4*E_3*p*E_1 + K_2*a*E_4*E_3*p*E_1 + K_1*b*E_4*E_3*p*E_2 + K_2*b*E_4*E_3*p*E_2)/(2*(K_1^2*E_3*p^2 + K_1^2*E_3^2*p + K_2^2*E_4*p^2 + K_2^2*E_4^2*p + 2*K_1*K_2*p^3 + K_1*K_2*Gamma*p^2 + 3*K_1*K_2*E_4*p^2 + K_1*K_2*E_4^2*p + 3*K_1*K_2*E_3*p^2 + K_1*K_2*E_3^2*p + K_1^2*Gamma*E_4*E_3 + K_2^2*Gamma*E_4*E_3 + K_1^2*Gamma*E_3*p + K_2^2*Gamma*E_4*p + K_1^2*E_4*E_3*p + K_2^2*E_4*E_3*p + 2*K_1*K_2*Gamma*E_4*E_3 + K_1*K_2*Gamma*E_4*p + K_1*K_2*Gamma*E_3*p + 2*K_1*K_2*E_4*E_3*p));
% funclass.g_abf=@(a,b,f)g_ab(a,b,f(1),f(2),f(3),f(4));
% %% given f and a, b what's supplys(2)
% Ib_abf=@(a,b,E_1,E_2,E_4,E_3)b+(supplys(1)-a)*(g*(K_1*E_3+ K_2*E_3+ K_2*p)+ b*E_4*(p +E_2 )- a*E_3*(p+E_1 ))/(g*(K_1*E_4+ K_2*E_4+ K_1*p)+ a*E_3*(p + E_1 )- b*E_4*(p+E_2 ) );
% funclass.Ib_steadyabf=@(a,b,f)Ib_abf(a,b,f(1),f(2),f(3),f(4));

